@using CompetencyMatrix.ViewModels
@model CompetencyMatrix.ViewModels.SkillEditorViewModel
@{
    if (Model.IsEditable)
    {
        <div class="well well-sm" style="margin-bottom: 5px">

            @await Html.PartialAsync("BreadCrumbs", Model.Breadcrumbs)

        </div>
    }
}
    <div class="well">
    
@{
    if (Model.IsEditable)
    {
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist" style="margin-bottom: 10px">
            <li role="presentation" class="active"><a href="#GeneralArea" aria-controls="home" role="tab" data-toggle="tab">General</a></li>
            <li role="presentation"><a href="#QuestionarieArea" aria-controls="profile" role="tab" data-toggle="tab">Questionnaire</a></li>
            <li role="presentation"><a href="#TrainingArea" aria-controls="messages" role="tab" data-toggle="tab">Training</a></li>
        </ul>
    }
}
    <!-- Edit evaluation model modal dialog-->
    <div id="skillEvaluationModelsEditDialog" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit evaluation models</h4>
                </div>
                <div class="modal-body" id="skillEvaluationModelsEditArea">
                </div>
            </div>
        </div>

        <script>

			$("#skillEvaluationModelsEditDialog").on('show.bs.modal', function () {

				var url = "@Url.Action("SkillEvaluationModels", "SkillEvaluationModel")";

				var data =
					{
						selectedId: $("#skillEvaluationModels").val()
					};

				$.ajax({
						url: url,
						type: "POST",
						data: data,
						success: function (result, status)
						{
							if (status != "error")
							{
								$("#skillEvaluationModelsEditArea").html(result);
								changeModel();
							}
						}
					});

			});

			$("#skillEvaluationModelsEditDialog").on('hide.bs.modal', function ()
			{
				var url = "@Url.Action("UpdateSkillLevelCriteriaMatrixModel", "Skill")";

				var matrixData = $("#SkillLevelCriteriaMatrixEditor :input").serialize();

				$.ajax({
						url: url,
						type: "POST",
						data: matrixData,
						success: function(result, status)
						{
							if (status !== "error")
							{
								$("#SkillLevelCriteriaMatrixEditor").replaceWith(result);
								refreshEvaluationModelSelect();
							}
						}
					});
			});

        </script>
    </div>

    <!-- New evaluation model modal dialog-->

    <form asp-controller="Skill" asp-action="SaveSkillDetails" method="post" role="form" data-ajax="true" data-ajax-method="POST">
        <!-- Tab panes -->
        <div class="tab-content panel" style="background-color:inherit">
            <div role="tabpanel" class="tab-pane active" id="GeneralArea">

                @Html.HiddenFor(m => m.Id)
@{
    if (Model.IsEditable)
    {
        <div class="form-group">
            <label asp-for="@Model.Name"></label>
            <input asp-for="@Model.Name" class="form-control"/>
        </div>
    }
}

        <div class="form-group">
                    <label asp-for="@Model.Description"></label>
@{if (Model.IsEditable)
    {
                    <textarea asp-for="@Model.Description" class="form-control" rows="6" maxlength="10000"></textarea>
    }
    else
    {
        <textarea asp-for="@Model.Description" class="form-control" rows="3" maxlength="10000" disabled></textarea>
    }
}
                </div>
                @{
                    if (Model.IsEditable)
                    {
                        <div class="form-group">
                            <label>Skill evaluation model</label>
                            <div class="input-group">
                                <select class="form-control" placeholder="Skill level model" asp-for="@Model.EvaluationModelId" asp-items="@Model.EvaluationModels" id="skillEvaluationModels"></select>
                                <span class="input-group-btn">
                                    @{
                                        if (Context.User.IsInRole("Admin") || Context.User.IsInRole("EM"))
                                        {

                                            <button class="btn btn-default" type="button" title="Edit skill level model" id="editModel" data-toggle="modal" data-target="#skillEvaluationModelsEditDialog" data-backdrop="static">
                                                <span class="glyphicon glyphicon-edit"></span>
                                            </button>

                                        }
                                    }
                                </span>
                            </div>
                        </div>
                    }
                }
                <div class="form-group">
                    <label>Criterias</label>
                    @{ Model.CriteriaMatrix.IsEditable = Model.IsEditable; }
                    @Html.EditorFor(m => m.CriteriaMatrix)
                    <div id="debugMatrix"></div>
                </div>
            </div>
            @{
                if (Model.IsEditable)
                {
                    <div role="tabpanel" class="tab-pane" id="QuestionarieArea">
                        <div class="form-group">
                            <label>Enter questions needed to check skill level/knowledge</label>
                            <textarea asp-for="@Model.Questionarie" class="form-control" rows="10"></textarea>
                        </div>
                    </div>

                    <div role="tabpanel" class="tab-pane" id="TrainingArea">
                        <div>
                            <label>Enter stuff that needs to be read or accomplished to move to higher levels</label>
                            <textarea asp-for="@Model.TrainingMaterials" class="form-control" rows="10"></textarea>
                        </div>
                    </div>
                }
            }
        </div>
       @{
           if (Model.IsEditable && (Context.User.IsInRole("Admin") || Context.User.IsInRole("EM")))
           {


               Html.RenderPartial("Controls/ButtonPanel", new ButtonPanelModel()
               {
                   Buttons = new List<ButtonModel>() {
                                new ButtonModel { Name="Cancel", Title="Cancel changes", Type=ButtonType.Cancel, Id="cancelSkillChanges", OnClick="return false;" },
                                new ButtonModel { Name="Save", Title="Save changes", Type=ButtonType.Save, Id="saveSkillChanges",  }
                            }
               });



           }
    }
    </form>
</div>

<script>

    var _SkillEditor_GetEvaluationModelsOptions = "@Url.Action("GetEvaluationModelsOptions","SkillEvaluationModel")";

    $("#skillEvaluationModels")
		.change(
			function()
			{
			    var url = "@Url.Action("ChangeEvaluationModel", "Skill")";
			    var data =
					{
					    id: @Model.Id,
                        isEditable: @Model.IsEditable.ToString().ToLower(),
					    evaluationModelId: $(this).val()
					};

			    $.ajax({
			        url: url,
			        type: "POST",
			        data: data,
			        //contentType: "application/json; charset=utf-8",
			        //dataType: "json",
			        beforeSend: function()
			        {

			        },
			        success: function (result, status)
			        {
			            if (status != "error")
			            {
			                $("#SkillLevelCriteriaMatrixEditor").replaceWith(result);
			            }
			        }
			    });
			});

    $("#cancelSkillChanges")
		.click(
			function ()
			{
			    $("#detailsView")
					.load("@Url.Action("GetSkillDetailsView", "Skill")",
						{ id: @Model.Id },
						function(response, status, xhr)
						{
						});
			});

    $("#saveSkillChanges")
		.click(
			function()
			{
			    var nameInput = $("#GeneralArea input[id=Name]");
			    var newName = nameInput.val();
			    var modelId = @Model.Id;

			    renameSkillNode(modelId, newName);
			});

</script>
