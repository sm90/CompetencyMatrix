@using CompetencyMatrix.Infrastructure
@using CompetencyMatrix.ViewModels
@inject IServerVariables variables
@model EmployeeModel

<script src="@Url.Content("~/js/Employees/EmployeeCommon.js")" asp-append-version="true"></script>
<script src="@Url.Content("~/js/Employees/EmployeeDetailSkillTreeOptions.js")" asp-append-version="true"></script>
<script src="@Url.Content("~/js/Employees/EmployeeDetailSkillsTree.js")" asp-append-version="true"></script>
<script src="@Url.Content("~/js/Employees/EmployeeDetailListSkillsTree.js")" asp-append-version="true"></script>
<script src="@Url.Content("~/js/Employees/EmployeeDetailSkillTreeOptions.js")" asp-append-version="true"></script>

<script type="text/javascript">
    var tree1Dragging = false,
    tree2Over = false;

</script>

@{
    var buttons = (List<EmployeeButtonType>)ViewData["Buttons"];
}

@*Modal popup for add new skill to the employee skill list*@
<div class="modal fade" id="employeeAddSkillModalId" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="modalTitle">Add skill</h4>
            </div>
            <div class="modal-body" id="modalContent">
            </div>
        </div>
    </div>
</div>
<div class="cursorover">
    <a href="@Url.Action("GetEmployeeDetails", "Employees", new {id = variables.CurrentEditUserId})" class="navbar-link">
        <span class="glyphicon glyphicon-circle-arrow-left"></span>
        Back to employee
    </a>
</div>
@*<form asp-controller="Employeess" asp-action="SaveEmployeesSkills" method="post" role="form" id="skillDetailFormId"
    data-ajax="true" data-ajax-method="POST">*@

<div class="form-horizontal" id="employeeSkillDetailPopup" style="background-color: inherit">
    <div id="editSkillContentId">
        <div class="row">
            <div class="col-lg-4">
                <div>
                    @await Html.PartialAsync("EmployeeSkillTree")
                </div>
            </div>
            <div class="col-lg-8 well" id="containerDetailSkillId">
                <div id="headerContainerDetailSkillId">
                    <div class="form-group">
                        <div class="panel-heading pull-left">
                            <label class="label-data" style="font-size: 130%!important;">@Model.Name</label>
                            <label style="border-right: 1px darkgray solid;"> &nbsp;</label>
                            <label class="label-data" style="font-size: 130%!important;">@Model.Title</label>
                        </div>

                        <div class="col-md-1 control-label"></div>
                        <div class="pull-right">

                            @if (buttons.Contains(EmployeeButtonType.Edit))
            {
                                <button type="button" class="btn btn-default disabled" id="btnEditEmployeeSkillId"
                                        onclick="employeeSkillEdit(null, true, null)">
                                    <span class="glyphicon glyphicon-edit"></span>
                                    Edit
                                </button>
                            }

                            @if (buttons.Contains(EmployeeButtonType.Edit))
            {

                                <button type="button" class="btn btn-default disabled" id="deleteEmployeeSkillId"
                                        onclick="deleteEmployeeSkill()"
                                        data-url='@Url.Action("DeleteSkillFromEmployee", "Employees")'>
                                    <span class="glyphicon glyphicon-floppy-remove"></span>
                                    Remove
                                </button>
                            }

                            @if (buttons.Contains(EmployeeButtonType.Save))
            {
                                <button type="submit" class="btn btn-default" id="skillDetailFormSubmitId"
                                        title="Save draft changes" onclick="saveSkillsToDb(@Model.Id, CompetencyMatrix.EmployeeProfileStatus.Open)"
                                        data-url="@Url.Action("SaveEmployeeSkills", "Employees")">
                                    <span class="glyphicon glyphicon-floppy-disk"></span>
                                    Save
                                </button>
                            }

                            @if (buttons.Contains(EmployeeButtonType.Submit))
            {
                                <button type="submit" class="btn btn-default" id="skillDetailFormSubmitId"
                                        title="Submit changes to manager" onclick="saveSkillsToDb(@Model.Id, CompetencyMatrix.EmployeeProfileStatus.Submitted)"
                                        data-url="@Url.Action("SaveEmployeeSkills", "Employees")">
                                    <span class="glyphicon glyphicon-floppy-disk"></span>
                                    Submit
                                </button>
                            }

                            @if (buttons.Contains(EmployeeButtonType.Cancel))
            {

                                <button class="btn btn-default" title="Cancel changes" data-dismiss="modal" id="skillDetailFormCancelId"
                                        onclick="skillDetailFormCancel()"
                                        data-url="@Url.Action("Clear", "Employees")">
                                    <span class="glyphicon glyphicon-refresh"></span>
                                    Cancel
                                </button>
                            }

                            @if (buttons.Contains(EmployeeButtonType.Approve))
            {
                                <button type="submit" class="btn btn-default" id="skillDetailFormApproveId"
                                        title="Approve changes"
                                        onclick="approveEmployee(@variables.CurrentEditUserId, @variables.CurrentUserId)">
                                    <span class="glyphicon glyphicon-floppy-disk"></span>
                                    Approve
                                </button>
                            }

                            @if (buttons.Contains(EmployeeButtonType.Reject))
            {
                                <button class="btn btn-default" title="Reject changes" id="skillDetailFormRejectId"
                                        onclick="rejectEmployee(@variables.CurrentEditUserId, @variables.CurrentUserId)">
                                    <span class="glyphicon glyphicon-refresh"></span>
                                    Reject
                                </button>
                            }


                        </div>

                    </div>
                </div>
                <div id="subContainerDetailSkillId" style="overflow-y:auto;">
                    <div id="employeeDetailSkillContentId">
                        <script type="text/javascript">
                            $('#employeeDetailSkillContentId')
                                .load("@Url.Action("GetEmployeeSkillDetailView", "Employees")",
                                    function (response, status, xhr) {
                                    });
                        </script>
                    </div>
                    <div id="detailsView" style="overflow: auto;">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*</form>*@
